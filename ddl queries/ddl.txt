create table Dealer_Store(
    dealer_id integer generated by default as identity,
    dealer_name varchar2(30) not null,
    mail varchar2(30),
    mobile_num varchar2(20) not null,
    start_date varchar2(40),
    street_address varchar2(50),
    city varchar2(30),
    country varchar2(30),
    primary key(dealer_id)
);

create table Employees (
    employee_id integer generated by default as identity,
    dealer_id integer not null,
    username varchar2(30) not null,
    employee_type varchar2(30) not null,
    start_date varchar2(40),
    mobile_num varchar2(20) not null,
    primary key(employee_id),
    foreign key(dealer_id) references dealer_store(dealer_id)
);

create table Customers (
    cust_id integer generated by default as identity,
    first_name varchar2(40) not null,
    last_name varchar2(30) not null,
    cust_type varchar2(15) not null,
    street_address varchar2(50),
    city varchar2(30),
    country varchar2(30),
    mobile_num varchar2(20) not null,
    mail varchar2(50),
    primary key(cust_id)
);

create table Products (
    prod_id integer generated by default as identity,
    dealer_id integer not null,
    quantity integer not null,
    selling_rate_price integer not null,
    category varchar2(40) not null,
    manufacturer varchar2(30) not null,
    primary key(prod_id),
    foreign key(dealer_id) references dealer_store(dealer_id)
);

create table Orders (
    order_id integer generated by default as identity,
    employee_id integer not null,
    cust_id integer not null,
    prod_id integer not null,
    order_quantity integer not null,
    order_type varchar2(15),
    primary key(order_id),
    foreign key(employee_id) references employees(employee_id),
    foreign key(cust_id) references customers(cust_id),
    foreign key(prod_id) references products(prod_id)
);

create table Price (
    price_id integer generated by default as identity,
    prod_id integer not null,
    switching_promo_price integer,
    existing_promo_price integer,
    promo_price integer,
    primary key(price_id),
    foreign key(prod_id) references products(prod_id)
);

create table Invoice (
    invoice_id integer generated by default as identity,
    order_id integer not null,
    cust_id integer not null,
    employee_id integer not null,
    payment_method varchar2(10) not null,
    invoice_date varchar2(40),
    amount integer not null,
    primary key(invoice_id),
    foreign key(order_id) references orders(order_id),
    foreign key(cust_id) references customers(cust_id),
    foreign key(employee_id) references employees(employee_id)
);

create table Feedback (
    feedback_id integer generated by default as identity,
    employee_id integer not null,
    cust_id integer not null,
    comments varchar2(50) not null,
    star_ratings float(10) not null,
    primary key(feedback_id),
    foreign key(employee_id) references employees(employee_id),
    foreign key(cust_id) references customers(cust_id)
);

create table Performance (
    performance_id integer generated by default as identity,
    employee_id integer not null,
    feedback_id integer not null,
    current_role varchar2(15) not null,
    current_salary integer,
    prod_sales integer,
    ratings float(10) not null,
    primary key(performance_id),
    foreign key(employee_id) references employees(employee_id),
    foreign key(feedback_id) references feedback(feedback_id)
);

